{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1YuoGTCmwp81uACl_7QjckAUG6-jIz4-P","timestamp":1709791645645},{"file_id":"1oOoiMDM3kgMtRmhUKjVfe2_-kyLX_LHk","timestamp":1569529419544}]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"Cvw4Lp-Yt6KA"},"source":["# List ends:\n","# http://www.practicepython.org/solution/2014/05/15/12-list-ends-solutions.html\n","\n","# Write a program that takes a list of numbers (for example, a = [5, 10, 15, 20, 25])\n","# and makes a new list of only the first and last elements of the given list. For practice, write this code inside a function."],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"nlTDQpFnuQ9z","outputId":"f23ec6a2-1a7b-4cb1-d7ca-9d043af2a11e","executionInfo":{"status":"ok","timestamp":1567120323964,"user_tz":240,"elapsed":718,"user":{"displayName":"George Mount","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBxsg-mnm87eJBQjJkU-tJwmEe7eul6Hc4oEpxW8gU=s64","userId":"01427523874165577846"}},"colab":{"base_uri":"https://localhost:8080/","height":54}},"source":["# naive solution\n","\n","import random\n","list= [5, 10, 15, 20, 25]\n","new_list=[]\n","\n","def list_2():\n","  first_num = list[0]\n","  last_num = list[-1]\n","  new_list.append(first_num),new_list.append(last_num)\n","  print(list)\n","  print(new_list)\n","\n","list_2()\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[5, 10, 15, 20, 25]\n","[5, 25]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"OLofArkkqOax","outputId":"aaf24010-e72a-42e9-9798-0934fd821ac4","executionInfo":{"status":"ok","timestamp":1567120501077,"user_tz":240,"elapsed":476,"user":{"displayName":"George Mount","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBxsg-mnm87eJBQjJkU-tJwmEe7eul6Hc4oEpxW8gU=s64","userId":"01427523874165577846"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["def list_ends(a_list):\n","    return [a_list[0], a_list[-1]]\n","\n","\n","list_ends([5, 10, 15, 20, 25])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[5, 100]"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"_T3xEEZqrjdf","outputId":"a09f76be-fce6-46ea-cb2d-9fbdf2f75042","executionInfo":{"status":"ok","timestamp":1567120856599,"user_tz":240,"elapsed":1319,"user":{"displayName":"George Mount","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBxsg-mnm87eJBQjJkU-tJwmEe7eul6Hc4oEpxW8gU=s64","userId":"01427523874165577846"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["def list_ends(a_list):\n","    return [a_list[0], a_list[-1]]\n","\n","\n","list_ends([[5,10], 10, 15, 20, [25,30]])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[[5, 10], [25, 30]]"]},"metadata":{"tags":[]},"execution_count":7}]}]}